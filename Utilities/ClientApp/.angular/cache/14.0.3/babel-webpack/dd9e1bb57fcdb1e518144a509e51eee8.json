{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/services/string-converter.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\n\nfunction DataGridComponent_p_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction DataGridComponent_table_3_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const head_r4 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.getFormattedHeads(head_r4));\n  }\n}\n\nfunction DataGridComponent_table_3_tr_7_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const head_r7 = ctx.$implicit;\n    const entry_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(entry_r5[head_r7]);\n  }\n}\n\nfunction DataGridComponent_table_3_tr_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, DataGridComponent_table_3_tr_7_td_1_Template, 2, 1, \"td\", 4);\n    i0.ɵɵelementStart(2, \"td\")(3, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function DataGridComponent_table_3_tr_7_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const entry_r5 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.updateBtn(entry_r5.id));\n    });\n    i0.ɵɵtext(4, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function DataGridComponent_table_3_tr_7_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const entry_r5 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.removeBtn(entry_r5.id));\n    });\n    i0.ɵɵtext(6, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.headArray);\n  }\n}\n\nfunction DataGridComponent_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 3)(1, \"thead\")(2, \"tr\");\n    i0.ɵɵtemplate(3, DataGridComponent_table_3_th_3_Template, 2, 1, \"th\", 4);\n    i0.ɵɵelementStart(4, \"th\");\n    i0.ɵɵtext(5, \"Actions\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"tbody\");\n    i0.ɵɵtemplate(7, DataGridComponent_table_3_tr_7_Template, 7, 1, \"tr\", 4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.headArray);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.dataArray);\n  }\n}\n\nexport let DataGridComponent = /*#__PURE__*/(() => {\n  class DataGridComponent {\n    constructor(stringConverter, router) {\n      this.stringConverter = stringConverter;\n      this.router = router;\n    }\n\n    addBtn() {\n      this.router.navigate([`add-${this.entityType}`]);\n    }\n\n    updateBtn(id) {\n      this.router.navigate([`edit-${this.entityType}/${id}`]);\n    }\n\n    removeBtn(id) {\n      if (confirm(\"Are you sure about removing meter location?\")) {\n        this.genericRestService.delete(id).subscribe(result => console.log(`${result} has been deleted`), error => console.error(error));\n      }\n    }\n\n    getFormattedHeads(head) {\n      return this.stringConverter.convertFirstLetterToUpper(head);\n    }\n\n  }\n\n  DataGridComponent.ɵfac = function DataGridComponent_Factory(t) {\n    return new (t || DataGridComponent)(i0.ɵɵdirectiveInject(i1.StringConverterService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  DataGridComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DataGridComponent,\n    selectors: [[\"app-data-grid\"]],\n    inputs: {\n      genericRestService: \"genericRestService\",\n      headArray: \"headArray\",\n      dataArray: \"dataArray\",\n      entityType: \"entityType\"\n    },\n    decls: 4,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [3, \"click\"], [\"class\", \"table table-bordered\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-bordered\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function DataGridComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, DataGridComponent_p_0_Template, 3, 0, \"p\", 0);\n        i0.ɵɵelementStart(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function DataGridComponent_Template_button_click_1_listener() {\n          return ctx.addBtn();\n        });\n        i0.ɵɵtext(2, \"Add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, DataGridComponent_table_3_Template, 8, 2, \"table\", 2);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.dataArray);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.dataArray);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf]\n  });\n  return DataGridComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}