{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/authentication.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/core/services/password-confirmation-validator.service\";\nimport * as i5 from \"@angular/common\";\n\nfunction RegisterUserComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵelement(1, \"span\", 21);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.errorMessage, i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction RegisterUserComponent_em_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"Please provide a valid email\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterUserComponent_em_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterUserComponent_em_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterUserComponent_em_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"Confirmation is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RegisterUserComponent_em_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"Passwords must match\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let RegisterUserComponent = /*#__PURE__*/(() => {\n  class RegisterUserComponent {\n    constructor(authService, fb, router, passwdConfirmValidator) {\n      this.authService = authService;\n      this.fb = fb;\n      this.router = router;\n      this.passwdConfirmValidator = passwdConfirmValidator;\n    }\n\n    ngOnInit() {\n      this.registerForm = this.fb.group({\n        firstName: [''],\n        lastName: [''],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required]],\n        confirm: ['']\n      });\n      this.registerForm.get('confirm').setValidators([Validators.required, this.passwdConfirmValidator.validateConfirmPassword(this.registerForm.get('password'))]);\n    }\n\n    validateControl(control) {\n      return this.registerForm.get(control).invalid && this.registerForm.get(control).touched;\n    }\n\n    hasError(control, error) {\n      return this.registerForm.get(control).hasError(error);\n    }\n\n    registerUser(registerFormValue) {\n      this.showError = false;\n      let formValues = Object.assign({}, registerFormValue);\n      let user = {\n        firstName: formValues.firstName,\n        lastName: formValues.lastName,\n        email: formValues.email,\n        password: formValues.password,\n        passwordConfirmation: formValues.confirm,\n        clientUri: 'https://localhost:44444/authentication/emailconfirmation'\n      };\n      this.authService.registerUser('api/Accounts/Registration', user).subscribe({\n        next: () => this.router.navigate(['/authentication/login']),\n        error: error => {\n          this.errorMessage = error.message;\n          console.log(this.errorMessage);\n          this.showError = true;\n        }\n      });\n    }\n\n  }\n\n  RegisterUserComponent.ɵfac = function RegisterUserComponent_Factory(t) {\n    return new (t || RegisterUserComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.PasswordConfirmationValidatorService));\n  };\n\n  RegisterUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterUserComponent,\n    selectors: [[\"app-register-user\"]],\n    decls: 44,\n    vars: 8,\n    consts: [[1, \"card\"], [1, \"card-body\"], [1, \"card-title\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"autocomplete\", \"off\", \"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\", \"row\"], [\"for\", \"firstName\", 1, \"col-form-label\", \"col-sm-2\"], [1, \"col-md-5\"], [\"type\", \"text\", \"id\", \"firstName\", \"formControlName\", \"firstName\", 1, \"form-control\"], [\"for\", \"lastName\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"text\", \"id\", \"lastName\", \"formControlName\", \"lastName\", 1, \"form-control\"], [\"for\", \"email\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [4, \"ngIf\"], [\"for\", \"password\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"for\", \"confirm\", 1, \"col-form-label\", \"col-sm-2\"], [\"type\", \"password\", \"id\", \"confirm\", \"formControlName\", \"confirm\", 1, \"form-control\"], [1, \"col-md-1\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", 3, \"disabled\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"], [3, \"innerHTML\"]],\n    template: function RegisterUserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ɵɵtext(3, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, RegisterUserComponent_div_4_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementStart(5, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterUserComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.registerUser(ctx.registerForm.value);\n        });\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n        i0.ɵɵtext(8, \"First Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelement(10, \"input\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 5)(12, \"label\", 9);\n        i0.ɵɵtext(13, \"Last Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 7);\n        i0.ɵɵelement(15, \"input\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 5)(17, \"label\", 11);\n        i0.ɵɵtext(18, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 7);\n        i0.ɵɵelement(20, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 7);\n        i0.ɵɵtemplate(22, RegisterUserComponent_em_22_Template, 2, 0, \"em\", 13);\n        i0.ɵɵtemplate(23, RegisterUserComponent_em_23_Template, 2, 0, \"em\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\", 5)(25, \"label\", 14);\n        i0.ɵɵtext(26, \"Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 7);\n        i0.ɵɵelement(28, \"input\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 7);\n        i0.ɵɵtemplate(30, RegisterUserComponent_em_30_Template, 2, 0, \"em\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"div\", 5)(32, \"label\", 16);\n        i0.ɵɵtext(33, \"Confirm Password:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 7);\n        i0.ɵɵelement(35, \"input\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"div\", 7);\n        i0.ɵɵtemplate(37, RegisterUserComponent_em_37_Template, 2, 0, \"em\", 13);\n        i0.ɵɵtemplate(38, RegisterUserComponent_em_38_Template, 2, 0, \"em\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(39, \"br\");\n        i0.ɵɵelementStart(40, \"div\", 5)(41, \"div\", 18)(42, \"button\", 19);\n        i0.ɵɵtext(43, \"Register\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.showError);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"email\") && ctx.hasError(\"email\", \"email\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"email\") && ctx.hasError(\"email\", \"required\"));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"password\") && ctx.hasError(\"password\", \"required\"));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"confirm\") && ctx.hasError(\"confirm\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasError(\"confirm\", \"mustMatch\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", !ctx.registerForm.valid);\n      }\n    },\n    dependencies: [i5.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName]\n  });\n  return RegisterUserComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}