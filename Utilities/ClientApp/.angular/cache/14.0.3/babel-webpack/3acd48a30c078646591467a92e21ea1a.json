{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { AppSettings } from 'src/app/core/constants/AppSettings';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../../../shared/selectbox/selectbox.component\";\nimport * as i4 from \"src/app/core/services/generic-rest.service\";\nexport let AddEditApartmentComponent = /*#__PURE__*/(() => {\n  class AddEditApartmentComponent {\n    constructor(apartmentService, fb, router, route) {\n      this.apartmentService = apartmentService;\n      this.fb = fb;\n      this.router = router;\n      this.route = route;\n    }\n\n    ngOnInit() {\n      this.endpoint = AppSettings.API_ENDPOINT;\n      this.id = Number.parseInt(this.route.snapshot.params['id']);\n      this.apartmentForm = this.fb.group({\n        relatedFamily: ['', [Validators.required]],\n        registeredCountPeople: ['', [Validators.required]],\n        receiptCode: [''],\n        address: this.fb.group({\n          country: ['', [Validators.required]],\n          state: ['', [Validators.required]],\n          city: ['', [Validators.required]],\n          street: ['', [Validators.required]],\n          apartmentNumber: ['', [Validators.required]],\n          houseNumber: ['', [Validators.required]],\n          buildingNumber: ['', [Validators.required]],\n          entranceNumber: ['', [Validators.required]]\n        })\n      });\n\n      if (this.id) {\n        this.apartmentService.getById(this.id).subscribe(result => this.apartmentForm.patchValue(result), error => console.error(error));\n      }\n    }\n\n    sendData(data) {\n      if (!this.id) this.createApartment(data);else this.updateApartment(data);\n      this.router.navigate([`/apartments`]);\n    }\n\n    createApartment(data) {\n      let apartment = Object.assign({}, data);\n      this.apartmentService.add(apartment).subscribe(result => console.log(result), error => console.error(error));\n    }\n\n    updateApartment(data) {\n      let apartment = Object.assign({\n        id: this.id\n      }, data);\n      this.apartmentService.update(this.id, apartment).subscribe(result => console.log(result), error => console.error(error));\n    }\n\n  }\n\n  AddEditApartmentComponent.ɵfac = function AddEditApartmentComponent_Factory(t) {\n    return new (t || AddEditApartmentComponent)(i0.ɵɵdirectiveInject('apartmentService'), i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  AddEditApartmentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddEditApartmentComponent,\n    selectors: [[\"app-add-edit-apartment\"]],\n    decls: 55,\n    vars: 5,\n    consts: [[1, \"container\", \"mt-5\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-6\"], [\"method\", \"post\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"relatedFamily\"], [\"id\", \"relatedFamily\", \"type\", \"text\", \"formControlName\", \"relatedFamily\", 1, \"form-control\"], [\"for\", \"registeredCountPeople\"], [\"id\", \"registeredCountPeople\", \"type\", \"text\", \"formControlName\", \"registeredCountPeople\", 1, \"form-control\"], [\"for\", \"receiptCode\"], [\"id\", \"receiptCode\", \"type\", \"text\", \"formControlName\", \"receiptCode\", 1, \"form-control\"], [\"formGroupName\", \"address\"], [\"for\", \"countries\"], [\"name\", \"countries\", \"url\", \"address/countries\"], [\"for\", \"states\"], [\"name\", \"states\", 3, \"url\"], [\"for\", \"cities\"], [\"name\", \"cities\", 3, \"url\"], [\"for\", \"streets\"], [\"name\", \"streets\", 3, \"url\"], [\"for\", \"apartmentNumber\"], [\"id\", \"apartmentNumber\", \"type\", \"text\", \"formControlName\", \"apartmentNumber\", 1, \"form-control\"], [\"for\", \"houseNumber\"], [\"id\", \"houseNumber\", \"type\", \"text\", \"formControlName\", \"houseNumber\", 1, \"form-control\"], [\"for\", \"buildingNumber\"], [\"id\", \"buildingNumber\", \"type\", \"text\", \"formControlName\", \"buildingNumber\", 1, \"form-control\"], [\"for\", \"entranceNumber\"], [\"id\", \"entranceNumber\", \"type\", \"text\", \"formControlName\", \"entranceNumber\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n    template: function AddEditApartmentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function AddEditApartmentComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.sendData(ctx.apartmentForm.value);\n        });\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"label\", 5);\n        i0.ɵɵtext(6, \"Related Family\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 4)(9, \"label\", 7);\n        i0.ɵɵtext(10, \"Registered Count People\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 4)(13, \"label\", 9);\n        i0.ɵɵtext(14, \"Receipt Code\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 11)(17, \"div\", 4)(18, \"label\", 12);\n        i0.ɵɵtext(19, \"Countries\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"app-selectbox\", 13);\n        i0.ɵɵtext(21, \" Loading countries... \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 4)(23, \"label\", 14);\n        i0.ɵɵtext(24, \"State\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"app-selectbox\", 15);\n        i0.ɵɵtext(26, \" Loading states... \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"div\", 4)(28, \"label\", 16);\n        i0.ɵɵtext(29, \"Cities\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"app-selectbox\", 17);\n        i0.ɵɵtext(31, \" Loading cities... \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"div\", 4)(33, \"label\", 18);\n        i0.ɵɵtext(34, \"Street\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"app-selectbox\", 19);\n        i0.ɵɵtext(36, \" Loading streets... \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(37, \"div\", 4)(38, \"label\", 20);\n        i0.ɵɵtext(39, \"Apartment Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(40, \"input\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"div\", 4)(42, \"label\", 22);\n        i0.ɵɵtext(43, \"House Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(44, \"input\", 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"div\", 4)(46, \"label\", 24);\n        i0.ɵɵtext(47, \"Building Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(48, \"input\", 25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"div\", 4)(50, \"label\", 26);\n        i0.ɵɵtext(51, \"Entrance Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(52, \"input\", 27);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(53, \"button\", 28);\n        i0.ɵɵtext(54, \"Submit\");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.apartmentForm);\n        i0.ɵɵadvance(22);\n        i0.ɵɵproperty(\"url\", ctx.endpoint + \"address/states\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"url\", ctx.endpoint + \"address/cities\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"url\", ctx.endpoint + \"address/streets\");\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"disabled\", !ctx.apartmentForm.valid);\n      }\n    },\n    dependencies: [i3.SelectboxComponent, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName]\n  });\n  return AddEditApartmentComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}