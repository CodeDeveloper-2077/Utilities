{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/services/authentication.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\n\nfunction LoginComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\n\nfunction LoginComponent_em_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_em_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function () {\n  return [\"/forgotPassword\"];\n};\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(authService, fb, router, route) {\n      this.authService = authService;\n      this.fb = fb;\n      this.router = router;\n      this.route = route;\n      this.showError = false;\n    }\n\n    ngOnInit() {\n      this.loginForm = this.fb.group({\n        userName: ['', [Validators.required]],\n        password: ['', [Validators.required]]\n      });\n      this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    validateControl(controlName) {\n      return this.loginForm.get(controlName).invalid && this.loginForm.get(controlName).touched;\n    }\n\n    hasError(controlName, errorName) {\n      return this.loginForm.get(controlName).hasError(errorName);\n    }\n\n    login(data) {\n      this.showError = false;\n      let login = Object.assign({}, data);\n      const userForAuth = {\n        email: login.userName,\n        password: login.password\n      };\n      this.authService.loginUser('api/accounts/login', userForAuth).subscribe({\n        next: result => {\n          localStorage.setItem(\"token\", result.token);\n          this.router.navigate([this.returnUrl]);\n        },\n        error: error => {\n          this.errorMessage = error.message;\n          this.showError = true;\n        }\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"login\"]],\n    decls: 25,\n    vars: 7,\n    consts: [[1, \"card\"], [1, \"card-body\"], [1, \"card-title\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"method\", \"post\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\", \"row\"], [\"for\", \"user-name\", 1, \"col-form-label\", \"col-sm-2\"], [\"id\", \"user-name\", \"type\", \"text\", \"formControlName\", \"username\", 1, \"col-md-5\"], [1, \"col-md-5\"], [4, \"ngIf\"], [\"for\", \"password\", 1, \"col-form-label\", \"col-sm-2\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", 1, \"col-md-5\"], [3, \"routerLink\"], [\"type\", \"submit\", 3, \"disabled\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ɵɵtext(3, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, LoginComponent_div_4_Template, 2, 1, \"div\", 3);\n        i0.ɵɵelementStart(5, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.login(ctx.loginForm.value);\n        });\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n        i0.ɵɵtext(8, \"User Name: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 7);\n        i0.ɵɵelementStart(10, \"div\", 8);\n        i0.ɵɵtemplate(11, LoginComponent_em_11_Template, 2, 0, \"em\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 5)(13, \"label\", 10);\n        i0.ɵɵtext(14, \"Password: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 11);\n        i0.ɵɵelementStart(16, \"div\", 8);\n        i0.ɵɵtemplate(17, LoginComponent_em_17_Template, 2, 0, \"em\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\")(19, \"a\", 12);\n        i0.ɵɵtext(20, \"Forgot Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(21, \"br\");\n        i0.ɵɵelementStart(22, \"button\", 13);\n        i0.ɵɵtext(23, \"Submit\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(24, \"hr\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.showError);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"userName\") && ctx.hasError(\"userName\", \"required\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"password\") && ctx.hasError(\"password\", \"required\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(6, _c0));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n      }\n    },\n    dependencies: [i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i3.RouterLinkWithHref]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}