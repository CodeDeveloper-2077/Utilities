{"ast":null,"code":"import { AppSettings } from 'src/app/core/constants/AppSettings';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"src/app/core/services/generic-rest.service\";\n\nfunction MeterTableComponent_p_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction MeterTableComponent_table_3_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵelement(10, \"img\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function MeterTableComponent_table_3_tr_14_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const meter_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.updateBtn(meter_r3.id));\n    });\n    i0.ɵɵtext(13, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function MeterTableComponent_table_3_tr_14_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const meter_r3 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.removeBtn(meter_r3.id));\n    });\n    i0.ɵɵtext(15, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const meter_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(meter_r3.meterName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(meter_r3.meterNumber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(meter_r3.prevCheckDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(meter_r3.nextCheckDate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r2.createDocPath(meter_r3.docPath), i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction MeterTableComponent_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 3)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Meter Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Meter Number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Previous Check Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Next Check Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"asdsa\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"tbody\");\n    i0.ɵɵtemplate(14, MeterTableComponent_table_3_tr_14_Template, 16, 5, \"tr\", 4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.meters);\n  }\n}\n\nexport let MeterTableComponent = /*#__PURE__*/(() => {\n  class MeterTableComponent {\n    constructor(meterService, router) {\n      this.meterService = meterService;\n      this.router = router;\n      this.meters = [];\n\n      this.createDocPath = serverPath => {\n        return `${AppSettings.API_ENDPOINT}${serverPath}`;\n      };\n    }\n\n    ngOnInit() {\n      this.meterService.getAll().subscribe(result => {\n        this.meters = result;\n      }, error => console.error(error));\n    }\n\n    addBtn() {\n      this.router.navigate(['/meters/add']);\n    }\n\n    updateBtn(id) {\n      this.router.navigate([`/meters/edit/`, id]);\n    }\n\n    removeBtn(id) {\n      if (confirm(\"Are you sure about removing meter?\")) {\n        this.meterService.delete(id).subscribe(result => console.log(`${result} has been deleted`), error => console.error(error));\n      }\n    }\n\n  }\n\n  MeterTableComponent.ɵfac = function MeterTableComponent_Factory(t) {\n    return new (t || MeterTableComponent)(i0.ɵɵdirectiveInject('meterService'), i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  MeterTableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MeterTableComponent,\n    selectors: [[\"app-meter-table\"]],\n    decls: 4,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [3, \"click\"], [\"class\", \"table table-bordered\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-bordered\"], [4, \"ngFor\", \"ngForOf\"], [\"alt\", \"profile picture\", 2, \"width\", \"60px\", \"height\", \"60px\", 3, \"src\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function MeterTableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, MeterTableComponent_p_0_Template, 3, 0, \"p\", 0);\n        i0.ɵɵelementStart(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function MeterTableComponent_Template_button_click_1_listener() {\n          return ctx.addBtn();\n        });\n        i0.ɵɵtext(2, \"Add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, MeterTableComponent_table_3_Template, 15, 1, \"table\", 2);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.meters);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.meters);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf]\n  });\n  return MeterTableComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}