{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/authentication.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\n\nfunction ForgotPasswordComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\n\nfunction ForgotPasswordComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.successMessage, \" \");\n  }\n}\n\nfunction ForgotPasswordComponent_em_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"em\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ForgotPasswordComponent = /*#__PURE__*/(() => {\n  class ForgotPasswordComponent {\n    constructor(authService, fb) {\n      this.authService = authService;\n      this.fb = fb;\n\n      this.validateControl = controlName => {\n        return this.forgotPasswordForm.get(controlName).invalid && this.forgotPasswordForm.get(controlName).touched;\n      };\n\n      this.hasError = (controlName, errorName) => {\n        return this.forgotPasswordForm.get(controlName).hasError(errorName);\n      };\n\n      this.forgotPassword = forgotPasswordFormValues => {\n        this.showError = this.showSuccess = false;\n        const forgotPass = Object.assign({}, forgotPasswordFormValues);\n        const forgotPasswordDto = {\n          email: forgotPass.email,\n          clientUri: \"https://localhost:44444/authentication/resetpassword\"\n        };\n        this.authService.forgorPassword('api/accounts/forgotpassword', forgotPasswordDto).subscribe({\n          next: () => {\n            this.showSuccess = true;\n            this.successMessage = 'The link has been sent, please check your email to reset your password.';\n          },\n          error: error => {\n            this.showError = true;\n            this.errorMessage = error.message;\n          }\n        });\n      };\n    }\n\n    ngOnInit() {\n      this.forgotPasswordForm = this.fb.group({\n        email: ['', [Validators.required]]\n      });\n    }\n\n  }\n\n  ForgotPasswordComponent.ɵfac = function ForgotPasswordComponent_Factory(t) {\n    return new (t || ForgotPasswordComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n\n  ForgotPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForgotPasswordComponent,\n    selectors: [[\"app-forgot-password\"]],\n    decls: 19,\n    vars: 5,\n    consts: [[1, \"card\"], [1, \"card-body\"], [1, \"card-title\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"alert alert-success\", \"role\", \"alert\", 4, \"ngIf\"], [\"autocomplete\", \"off\", \"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\", \"row\"], [\"for\", \"email\", 1, \"col-form-label\", \"col-sm-2\"], [1, \"col-md-5\"], [\"type\", \"text\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [4, \"ngIf\"], [1, \"col-md-1\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\", 3, \"disabled\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\"]],\n    template: function ForgotPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ɵɵtext(3, \"Forgot Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, ForgotPasswordComponent_div_4_Template, 2, 1, \"div\", 3);\n        i0.ɵɵtemplate(5, ForgotPasswordComponent_div_5_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementStart(6, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function ForgotPasswordComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.forgotPassword(ctx.forgotPasswordForm.value);\n        });\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"label\", 7);\n        i0.ɵɵtext(9, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 8);\n        i0.ɵɵelement(11, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 8);\n        i0.ɵɵtemplate(13, ForgotPasswordComponent_em_13_Template, 2, 0, \"em\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(14, \"br\");\n        i0.ɵɵelementStart(15, \"div\", 6)(16, \"div\", 11)(17, \"button\", 12);\n        i0.ɵɵtext(18, \"Submit\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.showError);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSuccess);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.forgotPasswordForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.validateControl(\"email\") && ctx.hasError(\"email\", \"required\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", !ctx.forgotPasswordForm.valid);\n      }\n    },\n    dependencies: [i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName]\n  });\n  return ForgotPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}