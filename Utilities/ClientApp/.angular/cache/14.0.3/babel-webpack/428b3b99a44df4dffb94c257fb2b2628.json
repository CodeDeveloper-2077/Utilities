{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Oleh/source/repos/Utilities/Utilities/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BaseComponent } from '../base-component/base.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nfunction FetchDataComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction FetchDataComponent_table_5_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const location_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(location_r3.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(location_r3.meterId);\n  }\n}\n\nfunction FetchDataComponent_table_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 3)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Id\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Name\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"tbody\");\n    i0.ɵɵtemplate(8, FetchDataComponent_table_5_tr_8_Template, 5, 2, \"tr\", 4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.meterLocations);\n  }\n}\n\nexport class FetchDataComponent extends BaseComponent {\n  constructor() {\n    super(...arguments);\n    this.meterLocations = [];\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.getData(\"api/MeterLocation\");\n      _this.meterLocations = _this.data;\n    })();\n  }\n\n}\n\nFetchDataComponent.ɵfac = /*@__PURE__*/function () {\n  let ɵFetchDataComponent_BaseFactory;\n  return function FetchDataComponent_Factory(t) {\n    return (ɵFetchDataComponent_BaseFactory || (ɵFetchDataComponent_BaseFactory = i0.ɵɵgetInheritedFactory(FetchDataComponent)))(t || FetchDataComponent);\n  };\n}();\n\nFetchDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 2,\n  consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function FetchDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Weather forecast\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"This component demonstrates fetching data from the server.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, FetchDataComponent_p_4_Template, 3, 0, \"p\", 1);\n      i0.ɵɵtemplate(5, FetchDataComponent_table_5_Template, 9, 1, \"table\", 2);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !ctx.meterLocations);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.meterLocations);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";AAGA,SAASA,aAAT,QAA8B,kCAA9B;;;;;;ICCAC,0BAA2B,CAA3B,EAA2B,IAA3B;IAA+BA;IAAUA;;;;;;IAUrCA,2BAA4C,CAA5C,EAA4C,IAA5C;IACMA;IAAiBA;IACrBA;IAAIA;IAAoBA;;;;;IADpBA;IAAAA;IACAA;IAAAA;;;;;;IAVVA,iCAAuF,CAAvF,EAAuF,OAAvF,EAAuF,CAAvF,EAAuF,IAAvF,EAAuF,CAAvF,EAAuF,IAAvF;IAGUA;IAAEA;IACNA;IAAIA;IAAIA;IAGZA;IACEA;IAIFA;;;;;IAJ2BA;IAAAA;;;;ADL7B,OAAM,MAAOC,kBAAP,SAAkCF,aAAlC,CAA8D;EAJpEG;;IAKS,sBAAkC,EAAlC;EAKR;;EAJcC,QAAQ;IAAA;;IAAA;MACnB,MAAM,KAAI,CAACC,OAAL,CAAa,mBAAb,CAAN;MACA,KAAI,CAACC,cAAL,GAAsB,KAAI,CAACC,IAA3B;IAFmB;EAGpB;;AALiE;;;;;2GAAvDL,sBAAkBM,KAAlBN;EAAkB;AAAA;;;QAAlBA;EAAkBO;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT/Bb;MAAoBA;MAAgBA;MAEpCA;MAAGA;MAA0DA;MAE7DA;MAEAA;;;;MAFIA;MAAAA;MAE6DA;MAAAA","names":["BaseComponent","i0","FetchDataComponent","constructor","ngOnInit","getData","meterLocations","data","t","selectors","features","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Oleh\\source\\repos\\Utilities\\Utilities\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts","C:\\Users\\Oleh\\source\\repos\\Utilities\\Utilities\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.html"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MeterLocation } from '../Models/MeterLocation';\r\nimport { BaseComponent } from '../base-component/base.component';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent extends BaseComponent<MeterLocation> implements OnInit {\r\n  public meterLocations: MeterLocation[] = [];\r\n  public async ngOnInit() {\r\n    await this.getData(\"api/MeterLocation\");\r\n    this.meterLocations = this.data;\r\n  }\r\n}","<h1 id=\"tableLabel\">Weather forecast</h1>\r\n\r\n<p>This component demonstrates fetching data from the server.</p>\r\n\r\n<p *ngIf=\"!meterLocations\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"meterLocations\">\r\n  <thead>\r\n    <tr>\r\n      <th>Id</th>\r\n      <th>Name</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let location of meterLocations\">\r\n      <td>{{location.name}}</td>\r\n      <td>{{location.meterId}}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n<!-- <table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"forecasts\">\r\n  <thead>\r\n    <tr>\r\n      <th>Date</th>\r\n      <th>Temp. (C)</th>\r\n      <th>Temp. (F)</th>\r\n      <th>Summary</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let forecast of forecasts\">\r\n      <td>{{ forecast.date }}</td>\r\n      <td>{{ forecast.temperatureC }}</td>\r\n      <td>{{ forecast.temperatureF }}</td>\r\n      <td>{{ forecast.summary }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table> -->\r\n"]},"metadata":{},"sourceType":"module"}